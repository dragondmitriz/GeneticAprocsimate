package main;

import threads.workResourse;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import threads.work;
import threads.workAdmin;

/**
 *
 * @author dmitriz
 */
public class window extends javax.swing.JFrame {

    /**
     * Creates new form window
     */
    public window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        canvas1 = new java.awt.Canvas();
        jButton5 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 725));
        setPreferredSize(new java.awt.Dimension(500, 725));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton6.setText("Админ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Ресурс");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 490, 600));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 397, -1, -1));

        jButton2.setText("Генетический алгоритм");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        canvas1.setMinimumSize(new java.awt.Dimension(153, 153));
        canvas1.setName(""); // NOI18N

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/image_4155.gif"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("пользователький");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"x", null, null},
                {"y", null, null}
            },
            new String [] {
                "\\", "1", "2"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(20);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(40);
        }

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Точки:");

        jLabel2.setText("Точность:");

        jRadioButton1.setText("низкая");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("средняя");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("высокая");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("...");

        jButton4.setText("help");
        jButton4.setAutoscrolls(true);
        jButton4.setMaximumSize(new java.awt.Dimension(53, 35));
        jButton4.setMinimumSize(new java.awt.Dimension(53, 35));
        jButton4.setPreferredSize(new java.awt.Dimension(53, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jRadioButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton3)
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(jButton1))
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addGap(2, 2, 2)
                .addComponent(jButton2)
                .addGap(2, 2, 2)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 480, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnCount(jTable1.getColumnCount()+1);
        model.setRowCount(jTable1.getRowCount());
        for(int i=0;i<jTable1.getRowCount();i++)
        {
            for(int j=0;j<jTable1.getColumnCount();j++)
            {
                model.setValueAt(jTable1.getValueAt(i, j), i, j);
            }
        }
        String[] columnNames=new String[jTable1.getColumnCount()+1];
        for(int i=0;i<jTable1.getColumnCount();i++)
        {
            columnNames[i]=jTable1.getColumnName(i);
        }
        columnNames[jTable1.getColumnCount()]=Integer.toString(jTable1.getColumnCount());
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);
        jTable1.setValueAt(0, 0, jTable1.getColumnCount()-1);
        jTable1.setValueAt(0, 1, jTable1.getColumnCount()-1);
        if (jTable1.getColumnCount()>4)
        {
            jTable1.setAutoResizeMode(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getColumnCount()>3)
        {
            jTable1.removeColumn(jTable1.getColumnModel().getColumn(jTable1.getColumnCount()-1));
            if (jTable1.getColumnCount()<5)
            {
                jTable1.setAutoResizeMode(3);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
       
    public static Boolean isWork=false;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!isWork)
        {
            try
            {
                int[] x=new int[jTable1.getColumnCount()-1];
                int[] y=new int[jTable1.getColumnCount()-1];
                for(int i=1;i<jTable1.getColumnCount();i++)
                {
                    try
                    {
                        x[i-1]=(int)jTable1.getValueAt(0, i);
                    }
                    catch(ClassCastException CCE)
                    {
                        x[i-1]=Integer.parseInt((String)jTable1.getValueAt(0, i));
                    }
                    try
                    {
                        y[i-1]=(int)jTable1.getValueAt(1, i);
                    }
                    catch(ClassCastException CCE)
                    {
                        y[i-1]=Integer.parseInt((String)jTable1.getValueAt(1, i));
                    }
                }
                Thread work=null;
                if (jRadioButton1.isSelected())
                {
                    work=new Thread(new workAdmin(500,3,10,10,30,x,y));
                    work.start();
                }
                else if (jRadioButton2.isSelected())
                {

                    work=new Thread(new workAdmin(1000,5,20,20,50,x,y));
                    work.start();
                }
                else if (jRadioButton3.isSelected())
                {
                    work=new Thread(new workAdmin(5000,10,50,50,80,x,y));
                    work.start();
                }
                else if (jRadioButton4.isSelected())
                {
                    work=new Thread(new workAdmin(userSizePopulation,userLengthGenotype,userSizeBest,userMinMax,userPercentMutation,x,y));
                    work.start();
                }
            }catch(NumberFormatException | NullPointerException e)
            {
                JOptionPane.showMessageDialog(this, "Значения точек указаны некорректно.");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton2.isSelected())
        {
            jRadioButton2.setSelected(false);            
        }
        if (jRadioButton3.isSelected())
        {
            jRadioButton3.setSelected(false);
        }
        if (jRadioButton4.isSelected())
        {
            jRadioButton4.setSelected(false);
        }
        JOptionPane.showMessageDialog(this, "<html>Количество начальных особей: 500<br>"
                                               +"Длина генотипа: 3<br>"
                                               +"Количество выбираемых лучших особей: 10<br>"
                                               +"Максимальное значение гена при генерации начальных особей: 10<br>"
                                               +"Процент мутаци гена в генотипе: 30</html>");        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (jRadioButton1.isSelected())
        {
            jRadioButton1.setSelected(false);            
        }
        if (jRadioButton3.isSelected())
        {
            jRadioButton3.setSelected(false);
        }
        if (jRadioButton4.isSelected())
        {
            jRadioButton4.setSelected(false);
        }
        JOptionPane.showMessageDialog(this, "<html>Количество начальных особей: 1000<br>"
                                               +"Длина генотипа: 5<br>"
                                               +"Количество выбираемых лучших особей: 20<br>"
                                               +"Максимальное значение гена при генерации начальных особей: 20<br>"
                                               +"Процент мутаци гена в генотипе: 50</html>");
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if (jRadioButton2.isSelected())
        {
            jRadioButton2.setSelected(false);            
        }
        if (jRadioButton1.isSelected())
        {
            jRadioButton1.setSelected(false);
        }
        if (jRadioButton4.isSelected())
        {
            jRadioButton4.setSelected(false);
        }
        JOptionPane.showMessageDialog(this, "<html>Количество начальных особей: 5000<br>"
                                               +"Длина генотипа: 10<br>"
                                               +"Количество выбираемых лучших особей: 50<br>"
                                               +"Максимальное значение гена при генерации начальных особей: 50<br>"
                                               +"Процент мутаци гена в генотипе: 80</html>");
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        File f=new File("points.txt");
        try
        {
            //инициализация модели таблицы, используя класс со стандартными параметрами модели
            DefaultTableModel model=new DefaultTableModel();
            model.setRowCount(2);
            model.setColumnCount(0);
            Object[] column0Data=new Object[2];
            column0Data[0]="x";
            column0Data[1]="y";
            model.addColumn("\\",column0Data);
            //порядковое число добалвяемого столбца
            int i=1;
            //инициализация потока чтения с файла
            BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(f))); 
            //считывание данных с файла и последуящая для них обработка с добавлением в модель таблицы
            while(br.ready())
            {
                //строка с данными для точки
                String str=br.readLine();
                //инициализация массива для данных точки
                Object[] data=new Object[2];
                try
                {
                    //извлечение значение x из строки данных точки
                    data[0]=Integer.parseInt(str.substring(0, str.indexOf(" ")));
                    //извлечение значение y из строки данных точки
                    data[1]=Integer.parseInt(str.substring(str.indexOf(" ")+1));
                    //добавление в мобель стролбца
                    model.addColumn(Integer.toString(i++), data);
                }
                catch(NumberFormatException formatEx)
                {
                    JOptionPane.showMessageDialog(this,"Неверный формат данных для точки: "+str);
                }
            }
            if (model.getColumnCount()>2)
            {
                jTable1.setModel(model);
            }
        }
        //перехват ошибки при отсутствии файла
        catch(FileNotFoundException noFileEx)
        {
            JOptionPane.showMessageDialog(this, "Файл \"points.txt\" отсутствует в корне приложения.");
        }
        //перехват ошибки чтения файла
        catch(IOException IOEx)
        {
            JOptionPane.showMessageDialog(this, "Файл \"points.txt\" повреждён или не содержит данные.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JOptionPane.showMessageDialog(this, "<html><p>Приложение предназначенно для нахождения приближённой функции, которая проходит через указанные пользователем точки.<br>"
                + "Алгоритм вычислительного процесса основан на генетическом алгоритме.</p>"
                + "<h1 align=\"center\">РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ</h1><h2 align=\"center\">Раздел &quot;Точки&quot;</h2>"
                + "<div align=\"center\">"
                + "<table width=\"428\" border=\"0\">"
                + "<tr>"
                + "<th width=\"85\" scope=\"col\">кнопки</th>"
                + "<th width=\"333\" scope=\"col\">функции</th>"
                + "</tr>"
                + "<tr>"
                + "<td><div align=\"center\">&gt;</div></td>"
                + "<td><div align=\"center\">добавление точки в конец списка</div></td>"
                + "</tr>"
                + "<tr>"
                + "<td><div align=\"center\">&lt;</div></td>"
                + "<td><div align=\"center\">удаление точки из конца списка</div></td>"
                + "</tr>"
                + "<tr>"
                + "<td><div align=\"center\">изображение файла со стрелкой</div></td>"
                + "<td><div align=\"center\">извлечение точек из файла points.txt</div></td>"
                + "</tr>"
                + "</table>"
                + "</div>"
                + "<p>Редактирование значений точек осуществляется &quot;на месте&quot;, то есть непосредственно в ячейках таблицы с точками.</p>"
                + "<p>Файл points.txt находится в корне приложения. Правила корректного заполнения файла:</p>"
                + "<ul>"
                + "<li>Каждая точка начинается с новой строки;</li>"
                + "<li>Значения точек разделяются пробелами;</li>"
                + "<li>Значения точек должны являться целочиленными.</li>"
                + "</ul>"
                + "<h2 align=\"center\">Раздел &quot;Точность&quot;</h2>"
                + "<p align=\"left\">Для начала вычислений необходимо выбрать точность генетического алгоритма. Если этого не сделать, то кнопка запуска вычислений<br>"
                + "не запустит процесс вычислений с помощью генетического алгоритма.</p>"
                + "<p align=\"left\">При выборе точности отображется информационное окно с параметрами генетического алгоритма.</p>"
                + "<p align=\"left\">Для указания пользовательской точности необходимо корректно заполнить параметрами файл userParameters.txt в корне приложения.<br>"
                + "Правила заполнения файла:</p>"
                + "<ul>"
                + "<li>Каждый параметр начинается с новой строки;</li>"
                + "<li>Значения параметров целочисленные;</li>"
                + "<li>Параметры указываются в строгом порядке следования: начальное количество особей, длина генотипа, количество особей для селекции,<br>"
                + "модель максимального и минимального значений генов, процент мутации генотипа.</li>"
                + "</ul>"
                + "<h2 align=\"center\">Результат</h2>"
                + "<p align=\"left\">Результат вычислений представляется в двух вариантах отображения: графическом и функциональном. График функции прорисовывается на области,<br>"
                + "расположеной под кнопкой &quot;Генетический алгоритм&quot;, а также на эту область наносятся указанные пользователем точки.<br>"
                + "Аппроскимационная функция отображается под графиком.</p>"
                + "</html>");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setSize(getWidth(),90);
        this.setResizable(false);
        ImageIcon ii=new ImageIcon("icon.gif");
        jButton5.setIcon(ii);
        jTextArea1.setVisible(false);
        jPanel1.setVisible(false);
        jPanel1.setEnabled(false);
        jPanel2.setVisible(true);
    }//GEN-LAST:event_formWindowOpened

    int userSizePopulation, userLengthGenotype, userSizeBest, userMinMax, userPercentMutation;
    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        boolean correct=false;
        try
        {
            File file=new File("userParameters.txt");
            BufferedReader in=new BufferedReader(new InputStreamReader(new FileInputStream(file)));
            userSizePopulation=Integer.parseInt(in.readLine());
            userLengthGenotype=Integer.parseInt(in.readLine());
            userSizeBest=Integer.parseInt(in.readLine());
            userMinMax=Integer.parseInt(in.readLine());
            userPercentMutation=Integer.parseInt(in.readLine());
            in.close();
            correct=true;
        }    
        //перехват ошибки при отсутствии файла
        catch(FileNotFoundException FNFE)
        {
            JOptionPane.showMessageDialog(this, "Файл \"userParameters.txt\" отсутствует в корне приложения.");
            correct=false;
        }
        //перехват ошибки чтения файла
        catch(IOException IOE)
        {
            JOptionPane.showMessageDialog(this, "Файл \"userParameters.txt\" повреждён или не содержит данные.");
            correct=false;
        }
        //перехват ошибки конвертации строки в число
        catch(NumberFormatException NFE)
        {
            JOptionPane.showMessageDialog(this, "Файл \"userParameters.txt\" содержит некорректные данные для параметров генетического алгоритма..");
            correct=false;
        }
        if (correct)
        {
            if (jRadioButton3.isSelected())
            {
                jRadioButton3.setSelected(false);
            }
            {
                if (jRadioButton2.isSelected())
            {
                jRadioButton2.setSelected(false);            
            }
            if (jRadioButton1.isSelected())
            {
                jRadioButton1.setSelected(false);
            }
            JOptionPane.showMessageDialog(this, "<html>Количество начальных особей: "+userSizePopulation+"<br>"
                                                   +"Длина генотипа: "+userLengthGenotype+"<br>"
                                                   +"Количество выбираемых лучших особей: "+userSizeBest+"<br>"
                                                   +"Максимальное значение гена при генерации начальных особей: "+userMinMax+"<br>"
                                                   +"Процент мутаци гена в генотипе: "+userPercentMutation+"</html>");
            }
        }
        else
        {
            jRadioButton4.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.setSize(getWidth(),725);
        jButton6.setVisible(false);
        jButton7.setVisible(false);
        jTextArea1.setVisible(true);
        Thread workResourse=new Thread(new workResourse());
        workResourse.start();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.setSize(getWidth(),725);
        jPanel1.setVisible(true);
        jPanel1.setEnabled(true);
        jPanel2.setVisible(false);
        jPanel2.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static java.awt.Canvas canvas1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
